#!/usr/bin/env node

var program = require('commander'),
    app = require('../'),
    rootPath = require('path'),
    chalk = require('chalk'),
    pkg = require('../package.json'),
    watcher = require('watch'),
    v = pkg.version,
    defValue = {
        port: 3113,
        homepage: 'index',
        isWatching: true
    },
    outputMessage = function (msg) {

        console.log(chalk.red.bold("       _______      ___    _"));
        console.log(chalk.red.bold("      / ____\\ \\    / | |  | |"));
        console.log(chalk.green.bold("     | (___  \\ \\  / /| |__| |"));
        console.log(chalk.green.bold("      \\___ \\  \\ \\/ / |  __  |"));
        console.log(chalk.blue.bold("      ____) |  \\  /  | |  | |"));
        console.log(chalk.blue.bold("     |_____/    \\/   |_|  |_|"));
        console.log("");
        console.log(chalk.white.bold("             Node Serve Here"));
        console.log(chalk.white.bold("                     v ") + chalk.white(v));

        if (msg) {
            console.log("");
            console.log(msg);
            console.log("")
        }
    };

program
    .version(v);

program
    .command('serve [path]')
    .description('\tRun Node Serve Here! :D')
    .option('-p,--port <port>', 'startServer port, default to 3113')
    .option('-m, --main <homepage>', 'main page to render (fill without file extension, support html only).')
    .option('-w, --watch <isWatching>', 'watch project root directory for file changes.')
    .action(function (path, program) {
        var projectPath = rootPath.resolve(process.cwd(), path || ''),
            port = program.port || defValue.port,
            homepage = program.main || defValue.homepage,
            isWatching = program.watch || defValue.isWatching,
            options = {
                port: port,
                homepage: homepage
            },
            svh = null;

        // main process
        if (isWatching !== 'false') {

            watcherOptions = {
                ignoreDotFiles: true
            };

            watcher.watchTree(path, watcherOptions, function () {
                if (svh !== null) {
                    console.log('[info] closing server...');
                    svh.close();

                    console.log('[info] ' + new Date() + ' starting server...');
                    svh = app.server(path, options, callback_server(options.port));
                } else {
                    console.log('[info] ' + new Date() + ' starting server...');

                    svh = app.server(path, options, callback_server(options.port));
                }
            });
        } else {
            svh = app.server(path, options, callback_server(options.port));
        }
    });

program.parse(process.argv);

var callback_server = function (port) {
    outputMessage('node will serve you at http://localhost:' + port);
};